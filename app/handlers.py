from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command
from aiogram.types import FSInputFile, Video
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

import app.keybords as kb

router = Router()

class Request(StatesGroup):
        quantity = State()
        number = State()

rate1 = 14.00 # 100
rate2 = 13.90 # 300
rate3 = 13.80 # 500
rate4 = 13.70 # 1000
rate5 = 13.50 # 3000

@router.message(CommandStart())
async def get_photo_and_message(message: Message):
        await message.answer_photo(photo=FSInputFile('logo final.png', filename='logo'), reply_markup=kb.rev)
        await message.answer(f'<a href="tg://user?id={message.from_user.id}">{message.from_user.full_name}</a><a>, –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ Alipay !</a>', reply_markup=kb.main) # –≤–∞—Ä–∏–∞–Ω—Ç —Å –æ–±—Ä–∞—â–µ–Ω–∏–µ–º –ø–æ –∏–º–µ–Ω–∏

@router.callback_query(F.data == 'current_rate')
async def current_rate(callback: CallbackQuery):
        await callback.answer('', show_alert = False)
        await callback.message.answer(f'–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –Ω–∞ xx.xx.2024:\n\n–ü—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ—Ç 100¬• - {rate1}‚ÇΩ\n\n–ü—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ—Ç 300¬• - {rate2}‚ÇΩ\n\n–ü—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ—Ç 500¬• - {rate3}‚ÇΩ\n\n–ü—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ—Ç 1000¬• - {rate4}‚ÇΩ\n\n–ü—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ—Ç 3000¬• - {rate5}‚ÇΩ\n')


@router.callback_query(F.data == 'allowance')
async def allowance(callback: CallbackQuery):
        await callback.answer('', show_alert = False)
        await callback.bot.send_video(
                chat_id=callback.from_user.id,
                video=FSInputFile(path='guidetest.mp4')
        )
        await callback.message.answer('–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ–º –≤–∞–º –ø–æ–¥—Ä–æ–±–Ω—ã–π –≥–∞–π–¥ –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ—à–µ–ª—å–∫–∞ Alipay !\n–ï—Å–ª–∏ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É.')

@router.message(F.text == '–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ üìù')
async def request(message: Message, state: FSMContext):
        await state.set_state(Request.quantity)
        await message.answer(text='–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —é–∞–Ω—è—Ö (¬•) –∫–æ—Ç–æ—Ä—É—é –≤—ã –∂–µ–ª–∞–µ—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å')

@router.message(Request.quantity)
async def request_quantity(message: Message, state: FSMContext):
        await state.update_data(quantity=message.text)
        await state.set_state(Request.number)
        await message.answer(text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∫–æ—à–µ–ª—å–∫—É Alipay, –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n+7-XXX-XXX-XX-XX')

@router.message(Request.number)
async def request_number(message: Message, state: FSMContext):
        await state.update_data(number=message.text)
        await state.set_state(Request.number)
        data = await state.get_data()
        if float(data["quantity"]) >= 100 and float(data["quantity"]) < 300:
                await message.answer(f'–í–∞—à –Ω–æ–º–µ—Ä: {data["number"]}.\n–ö –æ–ø–ª–∞—Ç–µ –±—É–¥–µ—Ç: {float(data["quantity"])*rate1} —Ä—É–±–ª–µ–π.',reply_markup=kb.req)
        elif float(data["quantity"]) >= 300 and float(data["quantity"]) < 500:
                await message.answer(f'–í–∞—à –Ω–æ–º–µ—Ä: {data["number"]}.\n–ö –æ–ø–ª–∞—Ç–µ –±—É–¥–µ—Ç: {float(data["quantity"])*rate2} —Ä—É–±–ª–µ–π.',reply_markup=kb.req)
        elif float(data["quantity"]) >= 500 and float(data["quantity"]) < 1000:
                await message.answer(f'–í–∞—à –Ω–æ–º–µ—Ä: {data["number"]}.\n–ö –æ–ø–ª–∞—Ç–µ –±—É–¥–µ—Ç: {float(data["quantity"])*rate3} —Ä—É–±–ª–µ–π.',reply_markup=kb.req)
        elif float(data["quantity"]) >= 1000 and float(data["quantity"]) < 3000:
                await message.answer(f'–í–∞—à –Ω–æ–º–µ—Ä: {data["number"]}.\n–ö –æ–ø–ª–∞—Ç–µ –±—É–¥–µ—Ç: {float(data["quantity"])*rate4} —Ä—É–±–ª–µ–π.',reply_markup=kb.req)
        else:
                await message.answer(f'–í–∞—à –Ω–æ–º–µ—Ä: {data["number"]}.\n–ö –æ–ø–ª–∞—Ç–µ –±—É–¥–µ—Ç: {float(data["quantity"])*rate5} —Ä—É–±–ª–µ–π.',reply_markup=kb.req)

@router.callback_query(F.data == 'yes')
async def yes(callback: CallbackQuery, state: FSMContext):
        await callback.answer('', show_alert='False')
        await callback.message.answer('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!\n–í —Ç–µ—á–µ–Ω–∏–∏ 20 –º–∏–Ω—É—Ç —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –æ–ø–µ—Ä–∞—Ç–æ—Ä, –µ—Å–ª–∏ —ç—Ç–æ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É.', reply_markup=kb.back)
        data_yes = await state.get_data()
        if float(data_yes["quantity"]) >= 100 and float(data_yes["quantity"]) < 300:
                await callback.bot.send_message(chat_id=-1002376952587, text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <a href="tg://user?id={callback.from_user.id}">{callback.from_user.full_name}</a>\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ Alipay: {data_yes["number"]}\n–ö–æ–ª-–≤–æ —é–∞–Ω–µ–π –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é: {float(data_yes["quantity"])}\n–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {float(data_yes["quantity"])*rate1} —Ä—É–±–ª–µ–π')
        elif float(data_yes["quantity"]) >= 300 and float(data_yes["quantity"]) < 500:
                await callback.bot.send_message(chat_id=-1002376952587, text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <a href="tg://user?id={callback.from_user.id}">{callback.from_user.full_name}</a>\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ Alipay: {data_yes["number"]}\n–ö–æ–ª-–≤–æ —é–∞–Ω–µ–π –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é: {float(data_yes["quantity"])}\n–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {float(data_yes["quantity"])*rate2} —Ä—É–±–ª–µ–π')
        elif float(data_yes["quantity"]) >= 500 and float(data_yes["quantity"]) < 1000:
                await callback.bot.send_message(chat_id=-1002376952587, text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <a href="tg://user?id={callback.from_user.id}">{callback.from_user.full_name}</a>\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ Alipay: {data_yes["number"]}\n–ö–æ–ª-–≤–æ —é–∞–Ω–µ–π –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é: {float(data_yes["quantity"])}\n–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {float(data_yes["quantity"])*rate3} —Ä—É–±–ª–µ–π')
        elif float(data_yes["quantity"]) >= 1000 and float(data_yes["quantity"]) < 3000:
                await callback.bot.send_message(chat_id=-1002376952587, text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <a href="tg://user?id={callback.from_user.id}">{callback.from_user.full_name}</a>\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ Alipay: {data_yes["number"]}\n–ö–æ–ª-–≤–æ —é–∞–Ω–µ–π –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é: {float(data_yes["quantity"])}\n–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {float(data_yes["quantity"])*rate4} —Ä—É–±–ª–µ–π')
        else:
                await callback.bot.send_message(chat_id=-1002376952587, text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <a href="tg://user?id={callback.from_user.id}">{callback.from_user.full_name}</a>\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ Alipay: {data_yes["number"]}\n–ö–æ–ª-–≤–æ —é–∞–Ω–µ–π –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é: {float(data_yes["quantity"])}\n–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {float(data_yes["quantity"])*rate5} —Ä—É–±–ª–µ–π')

        await state.clear()

@router.callback_query(F.data == 'no')
async def no(callback: CallbackQuery):
        await callback.answer('', show_alert='False')
        await callback.message.answer('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.', reply_markup=kb.back)


@router.callback_query(F.data == 'back')
async def test(callback: CallbackQuery):
        await callback.message.answer_photo(photo=FSInputFile('logo final.png', filename='logo'), reply_markup=kb.rev)
        await callback.message.answer(f'<a href="tg://user?id={callback.from_user.id}">{callback.from_user.full_name}</a><a>, –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ Alipay !</a>',reply_markup=kb.main)  # –≤–∞—Ä–∏–∞–Ω—Ç —Å –æ–±—Ä–∞—â–µ–Ω–∏–µ–º –ø–æ –∏–º–µ–Ω–∏
        await callback.answer()

#@router.message(F.photo)
#async def cmd_start(message: Message) -> None:
#    photo_data = message.photo[-1]
#    await message.answer(f'{photo_data}')
# –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ Alipay !